{"version":3,"sources":["Actions/Types.js","Actions/Urls.js","Actions/Authentication.js","Components/SignUpModal/SignUpModal.js","Actions/Account.js","Actions/CDOfferings.js","Components/LoginModal/LoginModal.js","Components/Header/Header.js","Components/ContactForm/ContactForm.js","Components/Footer/Footer.js","Components/Home/Home.js","Components/AccountInteractions /AccountInteractions.js","Actions/Checking.js","Actions/Savings.js","Components/AccountPreview/AccountPreview.js","Actions/IRAAcounts.js","Components/AddAccountModal/AddAccountModal.js","Components/SideBar/SideBar.js","Components/UserDashboard/UserDashboard.js","Components/AdminDashboard/AdminDashboard.js","Components/UserDetails/UserDetails.js","Components/Main.js","Reducers/Authentication.js","Reducers/AccountHolder.js","Reducers/CDOfferings.js","App.js","Reducers/ConfigureStore.js","reportWebVitals.js","index.js"],"names":["LOGIN","LOGIN_FAILED","ACCOUNTHOLDER","ACCOUNTHOLDER_FAILED","CDOFFERINGS","CDOFFERINGS_FAILED","account","postRequestConfig","body","method","headers","JSON","stringify","addAuthResponse","token","type","ActionTypes","payload","loginFailed","errMess","SignUpModal","props","state","signUpUsername","signUpPassword","signUpValid","signUpInvalid","signUpMessage","handleChange","bind","handleSignUp","handleModalClose","event","this","setState","target","id","value","signUp","then","result","ok","MyModal","className","style","padding","margin","cursor","display","textAlign","data-toggle","data-target","data-backdrop","tabIndex","role","aria-labelledby","aria-hidden","htmlFor","onChange","onClick","data-dismiss","Component","withRouter","connect","dispatch","username","password","fetch","active","postAccount","data","URLs","error","Error","status","response","json","AccountResponse","catch","AccountFailed","cdOfferings","cdOfferingsFailed","LoginModal","loginUsername","loginPassword","handleClick","login","jwt","console","log","history","push","fetchAccount","alert","width","fontSize","statusText","Response","message","getRequestConfig","getCDOfferings","handleLogout","LoginView","parent","authenticate","handleDashboard","Header","to","src","height","alt","ContactForm","name","nameError","contact","email","emailError","emailError2","messageError","formValid","handleSubmit","handleBlur","test","e","length","isValidEmail","preventDefault","color","onBlur","placeholder","Footer","background","align","Home","viewBox","preserveAspectRatio","shapeRendering","d","xlinkHref","x","y","fill","borderTop","AccountInteractions","interactions","interactiontype","Fragment","DropdownButton","title","Dropdown","Item","as","for","required","Term","term","InterestRate","interestRate","prefix","displayType","IsDBA","dba","IRAType","OpenedOn","date","Moment","locale","format","Balance","balance","AccountPreview","accounts","useDispatch","useSelector","openAccountDetails","deleteAccount","postDeleteSavings","renderAccountPreview","map","openedDate","AddAccountModal","accountType","startingBalance","CD_ID","IRA_Type","handleCheckbox","handleCDClick","addCheckingAccount","isDBA","addSavingsAccount","addIRAAccount","Button","borderRadius","step","min","ButtonGroup","vertical","onClickCapture","offerings","postAddChecking","postAddSavings","postAddIRA","SideBar","href","aria-expanded","checkingAccounts","savingsAccounts","iraAccounts","cdAccounts","UserDashboard","handlePrintProps","accountHolder","firstName","React","AdminDashboard","handleUser","UserDetails","values","register","middleName","lastName","ssn","phone","onSubmit","pattern","minLength","maxLength","Main","location","path","component","exact","Authentication","action","AccountHolder","CdOfferings","store","createStore","combineReducers","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f0442fb.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\nexport const ACCOUNTHOLDER = 'ACCOUNTHOLDER';\nexport const ACCOUNTHOLDER_FAILED = 'ACCOUNTHOLDER_FAILED';\n\nexport const CHECKING = 'CHECKING';\nexport const CHECKING_FAILED = 'CHECKING_FAILED';\n\nexport const SAVINGS = 'SAVINGS';\nexport const SAVINGS_FAILED = 'SAVINGS_FAILED';\n\nexport const ACCOUNTS = 'ACCOUNTS';\nexport const ACCOUNTS_FAILED = 'ACCOUNTS_FAILED';\n\nexport const CDOFFERINGS = 'CDOFFERINGS';\nexport const CDOFFERINGS_FAILED = 'CDOFFERINGS_FAILED';","export const login = 'http://localhost:8080/authenticate';\nexport const signUp = 'http://localhost:8080/authenticate/createUser';\n\nexport const account = 'http://localhost:8080/user/AccountHolder';\n\nexport const addChecking = 'http://localhost:8080/user/addCheckingAccount';\nexport const deleteChecking = 'http://localhost:8080/user/deleteCheckingAccount';\n\nexport const addSavings = 'http://localhost:8080/user/addSavingsAccount';\nexport const deleteSavings = 'http://localhost:8080/user/deleteSavingsAccount';\n\nexport const addIRA = 'http://localhost:8080/user/addIRAAccount';\nexport const deleteIRA = 'http://localhost:8080/user/deleteIRAAccount';\n\nexport const cdOfferings = \"http://localhost:8080/user/cdOfferings\";","import * as ActionTypes from './Types';\nimport * as URLs from './Urls';\n\nconst postRequestConfig = (body) => {\n    return {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }\n};\n\nexport const login = (username, password) => (dispatch) => {\n\n    return fetch(URLs.login, postRequestConfig({\n        username: username,\n        password: password\n    }))\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ':' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        })\n        .then(Response => Response.json())\n        .then(token => dispatch(addAuthResponse(token)))\n        .catch(error => dispatch(loginFailed(error.message)));\n\n}\n\nconst addAuthResponse = (token) => ({\n    type: ActionTypes.LOGIN,\n    payload: token\n});\n\nconst loginFailed = (errMess) => ({\n    type: ActionTypes.LOGIN_FAILED,\n    payload: errMess\n});\n\nexport const signUp = (username, password) => {\n\n    return fetch(URLs.signUp, postRequestConfig({\n        password: password,\n        username: username,\n        active: true,\n        role: 'ROLE_USER'\n    }))\n\n}","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { signUp } from '../../Actions/Authentication';\n\nclass SignUpModal extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { signUpUsername: '', signUpPassword: '', signUpValid: false, signUpInvalid: false, signUpMessage: \"\" };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSignUp = this.handleSignUp.bind(this);\n        this.handleModalClose = this.handleModalClose.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleSignUp() {\n        this.setState({ signUpInvalid: false, signUpValid: false });\n\n        this.props.signUp(this.state.signUpUsername, this.state.signUpPassword)\n            .then(result => {\n                if (result.ok) {\n                    this.setState({ signUpValid: true, signUpMessage: 'SUCCESS - User has been created' });\n                } else {\n                    this.setState({ signUpInvalid: true, signUpMessage: 'FAILIED - Username already exsists' })\n                }\n            });\n    }\n\n    handleModalClose() {\n        this.setState({ signUpUsername: '', signUpPassword: '', signUpInvalid: false, signUpValid: false });\n    }\n\n    render() {\n\n        const MyModal = () => {\n            if (this.state.signUpValid) {\n                return (<div className=\"alert alert-success\" style={{ padding: \".5rem\", margin: \"0rem\" }}>{this.state.signUpMessage}</div>);\n            } else if (this.state.signUpInvalid) {\n                return (<div className=\"alert alert-danger\" style={{ padding: \".5rem\", margin: \"0rem\" }}>{this.state.signUpMessage}</div>);\n            } else {\n                return (<div></div>);\n            }\n        }\n\n        return (\n            <>\n                <span className=\"text-muted\" style={{ cursor: \"pointer\", display: \"block\", textAlign: \"center\" }} data-toggle=\"modal\" data-target=\"#signUpModal\" data-backdrop=\"static\">Sign Up</span>\n\n                <div className=\"modal fade\" id=\"signUpModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"signUpModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"signUpModalLabel\">Sign Up</h5>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"form-outline\">\n                                    <label className=\"form-label\" htmlFor=\"formControlDefault\"><span className=\"glyphicon glyphicon-user\">Username</span></label>\n                                    <input type=\"text\" id=\"signUpUsername\" className=\"form-control\" value={this.state.signUpUsername} onChange={this.handleChange} />\n                                </div>\n                                <div className=\"form-outline\">\n                                    <label className=\"form-label\" htmlFor=\"formControlDefault\">Password</label>\n                                    <input type=\"password\" id=\"signUpPassword\" className=\"form-control\" value={this.state.signUpPassword} onChange={this.handleChange} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer justify-content-between\">\n                                <div>\n                                    <MyModal />\n                                </div>\n                                <div>\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSignUp}>Submit</button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.handleModalClose}>Close</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUp: (username, password) => signUp(username, password)\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(SignUpModal));","import * as ActionTypes from './Types';\nimport * as URLs from './Urls';\n\nconst getRequestConfig = (token) => {\n    return {\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        }\n    }\n};\n\nconst postRequestConfig = (token, body) => {\n    return {\n        method: 'POST',\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }\n};\n\nexport const fetchAccount = (token) => (dispatch) => {\n\n    return fetch(URLs.account, getRequestConfig(token))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nexport const postAccount = (token, data) => (dispatch) => {\n\n    return fetch(URLs.account, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nconst AccountResponse = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER,\n    payload: data\n})\n\nconst AccountFailed = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER_FAILED,\n    payload: data\n})","import * as ActionTypes from './Types';\nimport * as URLs from './Urls';\n\nconst getRequestConfig = (token) => {\n    return {\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        }\n    }\n};\n\nexport const getCDOfferings = (token) => (dispatch) => {\n    return fetch(URLs.cdOfferings, getRequestConfig(token))\n    .then(result => {\n        if (result.ok) {\n            return result;\n        } else {\n            var error = new Error(result.status);\n            error.response = result;\n            throw error;\n        }\n    })\n    .then(result => result.json())\n    .then(result => dispatch(cdOfferings(result)))\n    .catch(error => dispatch(cdOfferingsFailed(error)));\n}\n\nconst cdOfferings = (data) => ({\n    type: ActionTypes.CDOFFERINGS,\n    payload: data\n})\n\nconst cdOfferingsFailed = (data) => ({\n    type: ActionTypes.CDOFFERINGS_FAILED,\n    payload: data\n})","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { login } from '../../Actions/Authentication';\nimport { fetchAccount } from '../../Actions/Account';\nimport { getCDOfferings } from '../../Actions/CDOfferings';\nimport * as ActionTypes from '../../Actions/Types';\n\n\nclass LoginModal extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { loginUsername: '', loginPassword: '' };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleModalClose = this.handleModalClose.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleModalClose() {\n        this.setState({ loginUsername: '', loginPassword: '' });\n    }\n\n    handleClick() {\n\n        this.props.login(this.state.loginUsername, this.state.loginPassword)\n            .then(result => {\n                if (result.type == ActionTypes.LOGIN && result.payload.role == \"ROLE_ADMIN\") {\n                    this.props.cdOfferings(result.payload.jwt)\n                    .then(result => console.log(result));\n                    this.props.history.push('/admin');\n                } else if (result.type == ActionTypes.LOGIN && result.payload.role == \"ROLE_USER\") {\n                    this.props.cdOfferings(result.payload.jwt);\n                    this.props.fetchAccount(result.payload.jwt)\n                        .then(result => {\n                            if (result.type == ActionTypes.ACCOUNTHOLDER_FAILED) {\n                                this.props.history.push('/register');\n                            } else {\n                                this.props.history.push('/user');\n                            }\n                        });\n                } else {\n                    alert(\"Login Failed: \" + result.payload);\n                }\n            });\n\n        this.setState({ loginUsername: '', loginPassword: '' });\n    }\n\n    render() {\n        return (\n            <>\n                <button className=\"btn btn-outline-primary\" style={{ width: \"7rem\", fontSize: \"1.4rem\" }} data-toggle=\"modal\" data-target=\"#loginModal\" data-backdrop=\"static\">Login</button>\n\n                <div className=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"loginModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"loginModalLabel\">Login</h5>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"form-outline\">\n                                    <input type=\"text\" id=\"loginUsername\" className=\"form-control\" value={this.state.loginUsername} onChange={this.handleChange} />\n                                    <label className=\"form-label\" htmlFor=\"formControlDefault\">Username</label>\n                                </div>\n                                <div className=\"form-outline\">\n                                    <input type=\"password\" id=\"loginPassword\" className=\"form-control\" value={this.state.loginPassword} onChange={this.handleChange} />\n                                    <label className=\"form-label\" htmlFor=\"formControlDefault\">Password</label>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.handleClick}>Login</button>\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.handleModalClose}>Cancel</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    login: (username, password) => dispatch(login(username, password)),\n    fetchAccount: (token) => dispatch(fetchAccount(token)),\n    cdOfferings: (token) => dispatch(getCDOfferings(token))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(LoginModal));","import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport * as ActionTypes from '../../Actions/Types';\nimport SignUpModal from '../SignUpModal/SignUpModal';\nimport LoginModal from '../LoginModal/LoginModal';\nimport './Header.css';\n\nfunction handleLogout(props) {\n    props.dispatch(deleteToken());\n    props.history.push('/');\n}\n\nfunction deleteToken() {\n    return {\n        type: ActionTypes.LOGIN,\n        payload: { jwt: '', role: '' }\n    }\n}\n\nfunction handleDashboard(props) {\n    props.history.push('/user');\n}\n\nfunction LoginView(props) {\n\n    if (props.parent.authenticate.jwt == '') {\n        return (\n            <>\n                <div><LoginModal /></div>\n                <div><SignUpModal /></div>\n            </>\n        );\n    }\n    return (\n        <>\n            <div><button className=\"btn btn-outline-primary\" style={{ width: \"7rem\", fontSize: \"1.4rem\" }} onClick={() => handleLogout(props.parent)}>Logout</button></div>\n            <div><span className=\"text-muted\" style={{ cursor: \"pointer\", display: \"block\", textAlign: \"center\" }} onClick={() => handleDashboard(props.parent)}>Dashboard</span></div>\n        </>\n    );\n}\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-light bg-light justify-content-between\">\n                    <NavLink className=\"nav-link\" to=\"/\">\n                        <img src=\"/MeritBankLogoNew.png\" height=\"80rem\" alt=\"\" />\n                    </NavLink>\n                    <div>\n                        <LoginView parent={this.props} />\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    authenticate: state.authenticate\n});\n\nexport default withRouter(connect(mapStateToProps)(Header));","import React, { Component } from 'react';\n\nclass ContactForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      nameError: false,\n      contact: '',\n      email: '',\n      emailError: false,\n      emailError2: false,\n      message: '',\n      messageError: false,\n      formValid: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  isValidEmail(email) {\n    return /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n  }\n\n\n  handleBlur(e) {\n\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n\n    if (value.length <= 0 && (name == 'name')) {\n      this.setState({ nameError: true });\n    } else {\n      this.setState({ nameError: false });\n    }\n\n    if (value.length <= 0 && (name == 'email')) {\n      this.setState({ emailError: true });\n      this.setState({ emailError2: false });\n    } else {\n      this.setState({ emailError: false });\n      if (this.isValidEmail(value)) {\n        this.setState({ emailError2: false });\n      } else {\n        this.setState({ emailError2: true });\n      }\n    }\n\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    const { name, email, message, nameError, emailError, emailError2, messageError } = this.state;\n\n    this.setState({ nameError: name ? false : true });\n    this.setState({ messageError: message ? false : true });\n    this.setState({ emailError: email ? false : true });\n    if (email && !emailError) { this.setState({ emailError2: this.isValidEmail(email) ? false : true }); }\n\n\n    if (name && email && message && !nameError && !emailError && !emailError2 && !messageError) {\n      this.setState({ formValid: true });\n    } else {\n      this.setState({ formValid: false });\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n\n    const { name, email, message, nameError, emailError, emailError2, messageError, formValid } = this.state;\n\n    if (!formValid) {\n\n      return (\n        <div>\n\n          <button type=\"button\" className=\"btn btn-link\" data-toggle=\"modal\" data-target=\"#contactModal\" style={{ color: 'white' }}>Contact Us</button>\n\n          <div className=\"modal fade\" id=\"contactModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">Contact Us</h5>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <input type=\"text\" name=\"name\" className=\"form-control\" value={this.state.name} onChange={this.handleChange} onBlur={this.handleBlur} />\n                    <label className=\"form-label\" htmlFor=\"formControlDefault\">Name</label>\n                  </div>\n                  <div className=\"form-group\">\n                    <input type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.handleChange} onBlur={this.handleBlur} />\n                    <label className=\"form-label\" htmlFor=\"formControlDefault\">Email</label>\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"mb-0\">Your contact number (Optional)</label>\n                    <input name=\"contact\" type=\"text\" className=\"form-control\" placeholder=\"Contact\" onChange={this.handleChange} value={this.state.contact} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label className=\"mb-0\">Message<span className=\"text-danger\">*</span></label>\n                    <textarea name=\"message\" type=\"text\" className=\"form-control\" placeholder=\"Message\" value={this.state.message} onChange={this.handleChange} onBlur={this.handleBlur} />\n                    {messageError\n                      ? <div className=\"alert alert-danger mt-2\">Message is a required field.</div>\n                      : ''\n                    }\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.handleSubmit}>Submit</button>\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          {/* <div className=\"card shadow-sm border-0 px-3 rounded-2 mb-3 py-4 mx-auto mt-5 bg-light\">\n            <div className=\"card-header bg-transparent border-0 text-center text-uppercase\"><h3>{this.props.title}</h3></div>\n            <div className=\"card-body\">\n              <form action=\"/\" onSubmit={(e) => this.handleSubmit(e)} encType=\"multipart/form-data\" autoComplete=\"off\">\n                <div className=\"form-group\">\n                  <label className=\"mb-0\">Your name<span className=\"text-danger\">*</span></label>\n                  <input name=\"name\" type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} onBlur={this.handleBlur} />\n                  {nameError\n                    ? <div className=\"alert alert-danger mt-2\">Name is a required field.</div>\n                    : ''\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"mb-0\">Your email<span className=\"text-danger\">*</span></label>\n                  <input name=\"email\" type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} onBlur={this.handleBlur} />\n                  {emailError\n                    ? <div className=\"alert alert-danger mt-2\">Email is a required field.</div>\n                    : ''\n                  }\n                  {emailError2\n                    ? <div className=\"alert alert-danger mt-2\">Email invalid.</div>\n                    : ''\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"mb-0\">Your contact number (Optional)</label>\n                  <input name=\"contact\" type=\"text\" className=\"form-control\" placeholder=\"Contact\" onChange={this.handleChange} value={this.state.contact} />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"mb-0\">Message<span className=\"text-danger\">*</span></label>\n                  <textarea name=\"message\" type=\"text\" className=\"form-control\" placeholder=\"Message\" value={this.state.message} onChange={this.handleChange} onBlur={this.handleBlur} />\n                  {messageError\n                    ? <div className=\"alert alert-danger mt-2\">Message is a required field.</div>\n                    : ''\n                  }\n                </div>\n                <p className=\"text-center mb-0\"><input type=\"submit\" className=\"btn btn-primary btn-lg w-100 text-uppercase\" value=\"Submit Now\" /></p>\n              </form>\n\n            </div>\n          </div>\n          <hr /> */}\n\n\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"thankyou_details\">\n          <div className=\"alert alert-success mt-3\">Thank for your message. We will contact you soon.</div>\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Name: {this.state.name}</li>\n            <li className=\"list-group-item\">Email: {this.state.email}</li>\n            <li className=\"list-group-item\">contact: {this.state.contact}</li>\n            <li className=\"list-group-item\">Message: {this.state.message}</li>\n          </ul>\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default ContactForm;","import React, { Component } from \"react\";\nimport ContactForm from '../ContactForm/ContactForm';\nimport './Footer.css';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <footer className=\"page-footer font-small\" id=\"footer\" style={{ background: \"linear-gradient(60deg, rgba(84,58,183,1) 0%, rgba(0,172,193,1) 100%) \" }}>\n\n                <div align=\"center\">\n                    <ContactForm />\n                    <div>Capstone Team 6 | 2021</div>\n                </div>\n\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n\n","import React from 'react';\nimport Footer from '../Footer/Footer';\nimport './Home.css';\n\nfunction Home() {\n    return (\n        <>\n            <div className=\"header\">\n                <div className=\"inner-header flex\">\n                    <h1>Welcome to Merit Bank</h1>\n                </div>\n\n                <div>\n                    <svg className=\"waves\" viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shapeRendering=\"auto\">\n                        <defs>\n                            <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n                        </defs>\n                        <g className=\"parallax\">\n                            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n                            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\n                            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\n                            <use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n                        </g>\n                    </svg>\n                </div>\n            </div>\n\n           \n           \n\n            <div align=\"center\">\n                <hr style={{ borderTop: '2px solid black', width: '90%' }} />\n            </div>\n\n\n            <div className=\"container\">\n                <div className=\"card-deck\">\n                    <div className=\"card\">\n                        <img className=\"card-img-top\" src=\"https://api.time.com/wp-content/uploads/2016/04/how-your-checking-account-affects-your-mood.jpg\" alt=\"checking account\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Checking Account</h5>\n                            <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                            <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <img className=\"card-img-top\" src=\"https://cdn.gobankingrates.com/wp-content/uploads/2019/09/illustration-businessman-sitting-on-piggy-bank-using-laptop-iStock-1136812263-Edit.jpg\" alt=\"Card image cap\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Savings Account</h5>\n                            <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                            <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card-deck\">\n                    <div className=\"card\">\n                        <img className=\"card-img-top\" src=\"https://www.creditloan.com/media/resize/700x394/choosing-a-certificate-of-deposit-cd-vs-a-savings-account-0.png\" alt=\"checking account\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Certificate of Deposit</h5>\n                            <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                            <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                        </div>\n                    </div>\n                    <div className=\"card\">\n                        <img className=\"card-img-top\" src=\"https://www.moneycrashers.com/wp-content/uploads/2020/09/ira-individual-retirement-account-block-letters-1068x713.jpg\" alt=\"Card image cap\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Individual Retirement Account</h5>\n                            <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                            <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div align=\"center\">\n                <hr style={{ borderTop: '2px solid black', width: '90%' }} />\n            </div>\n\n            <Footer />\n        </>\n    );\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport { DropdownButton, Dropdown, ButtonGroup, Button } from \"react-bootstrap\";\nimport './AccountInteractions.css';\n\n\n\nclass AccountInteractions extends Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      interactions: 0,\n      interactiontype: \"Account Actions\",\n\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n\n\n\n\n\n\n  \n\n\n  // handleClick() {\n\n  \n\n  //   console.log(this.state);\n    \n\n  //   this.setState({ accountType: 'Choose a Type', startingBalance: 0, dba: false, CD_ID: 0, IRA_Type: '' });\n  //   }\n\n  render() {\n    return (\n      <React.Fragment>\n\n\n\n     \n\n\n      \n\n        <DropdownButton id=\"interactiontype\" title={this.state.interactiontype}>\n          <Dropdown.Item id=\"interactiontype\" as=\"button\" value=\"Deposit\" onClick={this.handleChange}>Deposit</Dropdown.Item>\n          <Dropdown.Item id=\"interactiontype\" as=\"button\" value=\"Withdraw\" onClick={this.handleChange}>Withdraw</Dropdown.Item>\n          <Dropdown.Item id=\"interactiontype\" as=\"button\" value=\"Transfer\" onClick={this.handleChange}>Transfer</Dropdown.Item>\n        </DropdownButton>\n\n\n        {this.state.interactiontype == 'Transfer' ?\n\n\n          <form className =\"transfer-form\">\n            <div className=\"transfer-form\">\n              <label for=\"select\">Transfer From Account</label>\n              <div>\n                <select id=\"select\" name=\"select\" required=\"required\" className=\"custom-select\">\n                  <option value=\"Checking\">Checking</option>\n                  <option value=\"Savings \">Savings</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"transfer-form\">\n              <label for=\"select1\">Transfer To Account</label>\n              <div>\n                <select id=\"select1\" name=\"select1\" className=\"custom-select\">\n                  <option value=\"Checking\">Checking</option>\n                  <option value=\"Savings\">Savings</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"transfer-form\">\n              <label for=\"text\">Amount</label>\n              <input id=\"text\" name=\"text\" type=\"text\" className=\"form-control\" />\n            </div>\n            <div className=\"transfer-form\">\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Cancel</button>\n\n            </div>\n          </form>\n\n\n\n          : null}\n\n\n\n        {this.state.interactiontype == 'Withdraw' ?\n\n\n          <form>\n            <div className=\"withdraw-form\">\n              <label for=\"select\">Withdraw From Account</label>\n              <div>\n                <select id=\"select\" name=\"select\" required=\"required\" className=\"custom-select\">\n                  <option value=\"Checking\">Checking</option>\n                  <option value=\"Savings \">Savings</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"withdraw-form\">\n              <label for=\"text\">Amount</label>\n              <input id=\"text\" name=\"text\" type=\"text\" className=\"form-control\" />\n            </div>\n            <div className=\"withdraw-form\">\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Cancel</button>\n\n            </div>\n          </form>\n\n\n\n          : null}\n\n\n          {this.state.interactiontype == 'Deposit' ?\n\n\n          <form>\n            <div className=\"deposit-form\">\n              <label for=\"select\">Deposit</label>\n              <div>\n                <select id=\"select\" name=\"select\" required=\"required\" className=\"custom-select\">\n                  <option value=\"Checking\">Checking</option>\n                  <option value=\"Savings \">Savings</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"deposit-form\">\n              <label for=\"text\">Amount</label>\n              <input id=\"text\" name=\"text\" type=\"text\" className=\"form-control\" />\n            </div>\n            <div className=\"deposit-form\">\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\n              <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">Cancel</button>\n\n            </div>\n          </form>\n\n\n\n          : null}\n\n\n\n\n\n\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default AccountInteractions;\n","import * as ActionTypes from './Types';\nimport * as URLs from './Urls';\n\nconst postRequestConfig = (token, body) => {\n    return {\n        method: 'POST',\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }\n};\n\nexport const postAddChecking = (token, data) => (dispatch) => {\n\n    return fetch(URLs.addChecking, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nexport const postDeleteChecking = (token, data) => (dispatch) => {\n\n    return fetch(URLs.deleteChecking, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nconst AccountResponse = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER,\n    payload: data\n})\n\nconst AccountFailed = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER_FAILED,\n    payload: data\n})","import * as ActionTypes from './Types';\nimport * as URLs from './Urls';\n\nconst getRequestConfig = (token) => {\n    return {\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        }\n    }\n};\n\nconst postRequestConfig = (token, body) => {\n    return {\n        method: 'POST',\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }\n};\n\nexport const postAddSavings = (token, data) => (dispatch) => {\n\n    return fetch(URLs.addSavings, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nexport const postDeleteSavings = (token, data) => (dispatch) => {\n\n    return fetch(URLs.deleteSavings, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nconst AccountResponse = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER,\n    payload: data\n})\n\nconst AccountFailed = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER_FAILED,\n    payload: data\n})","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport Moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postDeleteChecking } from '../../Actions/Checking';\nimport { postDeleteSavings } from '../../Actions/Savings';\nimport './AccountPreview.css';\n\nfunction Term({ term }) {\n\n    if (term == null) {\n        return (<></>);\n    } else {\n        return (\n            <div className=\"d-flex\" >\n                <div>\n                    <p>Term</p>\n                </div>\n                <div className=\"ml-auto\">\n                    <p>{term}</p>\n                </div>\n            </div >\n        );\n    }\n}\n\nfunction InterestRate({ interestRate }) {\n\n    if (interestRate == null) {\n        return (<></>);\n    } else {\n        return (\n            <div className=\"d-flex\" >\n                <div>\n                    <p>Interest Rate</p>\n                </div>\n                <div className=\"ml-auto\">\n                    <p><NumberFormat\n                        value={interestRate * 100}\n                        prefix='% '\n                        displayType='text' /></p>\n                </div>\n            </div >\n        );\n    }\n}\n\nfunction IsDBA({ dba }) {\n    if (dba == false) {\n        return (<></>);\n    } else {\n        return (\n            <div className=\"d-flex\" >\n                <div>\n                    <p>DBA Account</p>\n                </div>\n            </div >\n        );\n    }\n}\n\nfunction IRAType({ type }) {\n    if (type == null) {\n        return (<></>);\n    } else {\n        return (\n            <div className=\"d-flex card-title\" >\n                <div>\n                    <p>Type</p>\n                </div>\n                <div className=\"ml-auto\">\n                    <p>${type}</p>\n                </div>\n            </div >\n        );\n    }\n}\n\nfunction OpenedOn({ date }) {\n\n    Moment.locale('en');\n\n    if (date == null) {\n        return (<></>);\n    } else {\n        return (\n            <div className=\"d-flex\" >\n                <div>\n                    <p>Opened on</p>\n                </div>\n                <div className=\"ml-auto\">\n                    <p>{Moment(date).format('D MMM YYYY')}</p>\n                </div>\n            </div >\n        );\n    }\n}\n\nfunction Balance({ balance }) {\n\n    if (balance == null) {\n        return (<></>);\n    } else {\n        return (\n            <div className=\"d-flex card-title\" >\n                <div>\n                    <p>Balance</p>\n                </div>\n                <div className=\"ml-auto\">\n                    <p>${balance}</p>\n                </div>\n            </div >\n        );\n    }\n}\n\nfunction AccountPreview({ accounts, type }) {\n\n    const dispatch = useDispatch();\n    const jwt = useSelector((state) => state.authenticate.jwt);\n\n    const openAccountDetails = () => {\n    }\n\n    const deleteAccount = (account) => {\n        if (type == 'Checking') {\n            dispatch(postDeleteChecking(jwt, { balance: 0, id: account.id }));\n        } else if (type == 'Savings') {\n            dispatch(postDeleteSavings(jwt, { balance: 0, id: account.id }));\n        } else if (type == 'iraAccounts') {\n\n        } else if (type == 'cdAccounts') {\n            \n        }\n    }\n\n    const renderAccountPreview = accounts.map((account) => {\n        return (\n            <li onClick={openAccountDetails} key={account.id}>\n                <div className=\"card\">\n                    <Balance balance={account.balance} />\n\n                    <div align=\"center\"><hr id=\"seperator\" /></div>\n\n                    <div className=\"card-body\">\n                        <InterestRate interestRate={account.interestRate} />\n                        <OpenedOn date={account.openedDate} />\n                        <Term term={account.term} />\n                        <IsDBA dba={account.dba} />\n                        <IRAType type={account.type} />\n                    </div>\n\n                    <div align=\"center\"><hr id=\"seperator\" /></div>\n\n                    <button className=\"btn btn-outline-primary\" onClick={() => deleteAccount(account)}>Delete Account</button>\n                </div>\n            </li>\n        );\n    })\n\n    return (\n        <>{renderAccountPreview}</>\n    );\n}\n\nexport default AccountPreview;","import * as ActionTypes from './Types';\nimport * as URLs from './Urls';\n\nconst postRequestConfig = (token, body) => {\n    return {\n        method: 'POST',\n        headers: {\n            'authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    }\n};\n\nexport const postAddIRA = (token, data) => (dispatch) => {\n\n    return fetch(URLs.addIRA, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nexport const postDeleteIRA = (token, data) => (dispatch) => {\n\n    return fetch(URLs.deleteIRA, postRequestConfig(token, data))\n        .then(result => {\n            if (result.ok) {\n                return result;\n            } else {\n                var error = new Error(result.status);\n                error.response = result;\n                throw error;\n            }\n        })\n        .then(result => result.json())\n        .then(result => dispatch(AccountResponse(result)))\n        .catch(error => dispatch(AccountFailed(error)));\n}\n\nconst AccountResponse = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER,\n    payload: data\n})\n\nconst AccountFailed = (data) => ({\n    type: ActionTypes.ACCOUNTHOLDER_FAILED,\n    payload: data\n})","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\nimport { withRouter } from 'react-router-dom';\nimport { postAddChecking } from '../../Actions/Checking';\nimport { DropdownButton, Dropdown, ButtonGroup, Button } from \"react-bootstrap\";\nimport { postAddSavings } from \"../../Actions/Savings\";\nimport { postAddIRA } from \"../../Actions/IRAAcounts\";\n\nclass AddAccountModal extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            accountType: 'Choose a Type',\n            startingBalance: 0,\n            dba: false,\n            CD_ID: 0,\n            IRA_Type: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleModalClose = this.handleModalClose.bind(this);\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n        this.handleCDClick = this.handleCDClick.bind(this);\n    }\n\n    handleCheckbox(event) {\n        this.setState({ [event.target.id]: !this.state.dba });\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleCDClick({ target }) {\n        this.setState({ CD_ID: target.id });\n    }\n\n    handleClick() {\n\n        if (this.state.accountType == 'Checking') {\n            this.props.addCheckingAccount(this.props.jwt, {\n                balance: this.state.startingBalance,\n                isDBA: this.state.dba\n            });\n        } else if (this.state.accountType == 'Savings') {\n            this.props.addSavingsAccount(this.props.jwt, {\n                balance: this.state.startingBalance\n            });\n        } else if (this.state.accountType == 'Individual Retirement Account') {\n            this.props.addIRAAccount(this.props.jwt, {\n                balance: this.state.startingBalance,\n                type: this.state.IRA_Type\n            });\n        } else {\n            // console.log(this.state);\n        }\n\n        this.setState({ accountType: 'Choose a Type', startingBalance: 0, dba: false, CD_ID: 0, IRA_Type: '' });\n    }\n\n    handleModalClose() {\n        this.setState({ accountType: 'Choose a Type', startingBalance: 0, dba: false });\n    }\n\n    render() {\n\n        const cdOfferings = this.props.cdOfferings.map((account) =>\n            <Button key={account.id} id={account.id} style={{ margin: '.2rem', borderRadius: '.25rem' }}>\n                Certificate Of Deposit: ID#{account.id} term: {account.term} Interest Rate: <NumberFormat value={account.interestRate * 100} prefix='% ' displayType='text' />\n            </Button>\n        );\n\n        return (\n            <>\n                <button data-toggle=\"modal\" data-target=\"#addAccountModal\" id=\"sidebarButton\">New Account</button>\n\n                <div className=\"modal fade\" id=\"addAccountModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"addAccountModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"addAccountModalLabel\">Add Account</h5>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"form-group\">\n                                    <label className=\"form-label\">Account Type</label>\n                                    <DropdownButton id=\"accountType\" title={this.state.accountType}>\n                                        <Dropdown.Item id=\"accountType\" as=\"button\" value=\"Checking\" onClick={this.handleChange}>Checking</Dropdown.Item>\n                                        <Dropdown.Item id=\"accountType\" as=\"button\" value=\"Savings\" onClick={this.handleChange}>Savings</Dropdown.Item>\n                                        <Dropdown.Item id=\"accountType\" as=\"button\" value=\"Certificate Of Deposit\" onClick={this.handleChange}>Certificate Of Deposit</Dropdown.Item>\n                                        <Dropdown.Item id=\"accountType\" as=\"button\" value=\"Individual Retirement Account\" onClick={this.handleChange}>Individual Retirement Account</Dropdown.Item>\n                                    </DropdownButton>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label className=\"form-label\" htmlFor=\"startingBalance\">Starting Balance</label>\n                                    <input type=\"number\" id=\"startingBalance\" className=\"form-control\" step=\"0.01\" min=\"0\" value={this.state.startingBalance} onChange={this.handleChange} />\n                                </div>\n\n                                {this.state.accountType == 'Certificate Of Deposit' ?\n                                    <ButtonGroup vertical onClickCapture={this.handleCDClick}>\n                                        <p>Selected Account: ID# {this.state.CD_ID}</p>\n                                        {cdOfferings}\n                                    </ButtonGroup>\n                                    : null}\n\n                                {this.state.accountType == 'Checking' ?\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"dba\" onChange={this.handleCheckbox} />\n                                        <label className=\"form-check-label\" htmlFor=\"dba\">DBA Account</label>\n                                    </div>\n                                    : null}\n\n                                {this.state.accountType == 'Individual Retirement Account' ?\n                                    <div className=\"container\" style={{ padding: '0 .5rem'}}>\n                                        <div>\n                                            <input type=\"radio\" id=\"IRA_Type\" name=\"IRA_Type\" value=\"regular\" style={{ margin: '.25rem' }} onChange={this.handleChange} />\n                                            <label>Regular IRA</label>\n                                        </div>\n                                        <div>\n                                            <input type=\"radio\" id=\"IRA_Type\" name=\"IRA_Type\" value=\"rollover\" style={{ margin: '.25rem' }} onChange={this.handleChange} />\n                                            <label>Rollover IRA</label>\n                                        </div>\n                                        <div>\n                                            <input type=\"radio\" id=\"IRA_Type\" name=\"IRA_Type\" value=\"roth\" style={{ margin: '.25rem' }} onChange={this.handleChange} />\n                                            <label>Roth IRA</label>\n                                        </div>\n                                    </div>\n                                    : null}\n\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.handleClick}>Add</button>\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.handleModalClose}>Cancel</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    jwt: state.authenticate.jwt,\n    cdOfferings: state.cdOfferings.offerings\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addCheckingAccount: (token, data) => dispatch(postAddChecking(token, data)),\n    addSavingsAccount: (token, data) => dispatch(postAddSavings(token, data)),\n    addIRAAccount: (token, data) => dispatch(postAddIRA(token, data))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddAccountModal));","import React from 'react';\nimport AccountPreview from '../AccountPreview/AccountPreview';\nimport AddAccountModal from '../AddAccountModal/AddAccountModal';\nimport './SideBar.css'\n\nfunction SideBar(props) {\n    return (\n        <div className=\"wrapper\">\n            <nav id=\"sidebar\">\n                <div className=\"sidebar-header\">\n                    <h3 id=\"sidebarHeader\">Accounts</h3>\n                </div>\n\n                <ul className=\"list-unstyled components\" id=\"sidebarMenu\">\n                    <li>\n                        <a href=\"#checkingSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\" id=\"sidebarMenuHeader\">Checking</a>\n                        <ul className=\"collapse list-unstyled\" id=\"checkingSubmenu\">\n                            <AccountPreview accounts={props.account.checkingAccounts} type='Checking' />\n                        </ul>\n                    </li>\n                    <li>\n                        <a href=\"#savingsSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\" id=\"sidebarMenuHeader\">Savings</a>\n                        <ul className=\"collapse list-unstyled\" id=\"savingsSubmenu\">\n                            <AccountPreview accounts={props.account.savingsAccounts} type='Savings' />\n                        </ul>\n                    </li>\n                    <li>\n                        <a href=\"#iraSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\" id=\"sidebarMenuHeader\">Individual Retierment Accounts</a>\n                        <ul className=\"collapse list-unstyled\" id=\"iraSubmenu\">\n                        <AccountPreview accounts={props.account.iraAccounts} type='Individual Retierment' />\n                        </ul>\n                    </li>\n                    <li>\n                        <a href=\"#cdSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\" id=\"sidebarMenuHeader\">Certificate of Deposit</a>\n                        <ul className=\"collapse list-unstyled\" id=\"cdSubmenu\">\n                        <AccountPreview accounts={props.account.cdAccounts} type='Certificate of Deposit' />\n                        </ul>\n                    </li>\n                    <li>\n                        <AddAccountModal />\n                    </li>\n                    <li>\n                        <a href=\"#\" id=\"sidebarMenuHeader\">Contact Us</a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default SideBar;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AccountInteractions from '../AccountInteractions /AccountInteractions';\nimport SideBar from '../SideBar/SideBar';\nimport './UserDashboard.css';\n\nclass UserDashboard extends React.Component {\n\n\n  \n\n\n    constructor(props) {\n        super(props);\n\n        this.handlePrintProps = this.handlePrintProps.bind(this);\n    }\n\n    handlePrintProps() {\n        console.log(this.props);\n    }\n\n    render() {\n        if (this.props.accountHolder.accountHolder == null) {\n            return (<React.Fragment>\n                <button onClick={this.handlePrintProps}>Print props</button>\n            </React.Fragment>);\n        } else {\n            return (\n\n         \n     \n\n              \n\n                <div className=\"container-flex\">\n                    <div className=\"row\" id=\"userDashboardDiv\">\n                        <div className=\"col-2\">\n                            <SideBar account={this.props.accountHolder.accountHolder} />\n                        </div>\n\n\n\n\n                        <div className=\"col-10 has-bg-img\" id=\"userDisplayDiv\">\n\n\n                            <h1 id=\"welcomeMessege\">Welcome {this.props.accountHolder.accountHolder.firstName}</h1>\n\n\n                                 <h3>How may we asisst you?</h3>\n                              <AccountInteractions/> \n                \n\n                               </div>\n\n                                \n                                \n                                </div>\n                               \n                                </div>\n                           \n\n\n\n\n\n\n            );\n\n        }\n\n\n        // if (this.props.account.account == null && this.props.authenticate.jwt == '') {\n        //     return (\n        //         <div className=\"d-flex align-items-center justify-content-center\" style={{ height: '90vh' }}>\n        //             <h1>You must be logged in to reach this page.</h1>\n        //         </div>\n        //     );\n        // } else if (this.props.account.account != null && this.props.authenticate.jwt != '') {\n\n        //     return (\n\n        //         <div className=\"container-flex\">\n        //             <div className=\"row\" id=\"userDashboardDiv\">\n\n        //                 <div className=\"col-2\">\n        //                     <SideBar account={this.props.account.account}/>\n        //                 </div>\n\n        //                 <div className=\"col-10\" id=\"userDisplayDiv\">\n        //                     <h1 id=\"welcomeMessege\">Welcome {this.props.account.account.firstName}</h1>\n        //                     <button className=\"btn btn-light\" onClick={this.handlePrintProps}>Print Props</button>\n        //                     <div>\n\n        //                         <h3>How may we asisst you?</h3>\n        //                         <div className=\"input-group\" id=\"dropselect\">\n        //                             <select className=\"form-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\">\n        //                                 <option selected>Choose...</option>\n        //                                 <option value=\"1\">Deposit to Account</option>\n        //                                 <option value=\"2\">Widthdraw from Account</option>\n        //                                 <option value=\"3\">Transfer between Accounts</option>\n        //                             </select>\n        //                             <button className=\"btn btn-outline-secondary\" type=\"button\">Button</button>\n        //                         </div>\n        //                     </div>\n        //                 </div>\n        //             </div>\n        //         </div>\n        //     );\n        // } else if (this.props.account.account == null && this.props.authenticate.jwt != '') {\n        //     return (\n        //         <UserDetails />\n        //     );\n        // } else {\n        //     return (<div></div>);\n        // }\n    }\n}\n\nconst mapStateToProps = state => ({\n    accountHolder: state.accountHolder,\n    authenticate: state.authenticate\n});\n\nexport default withRouter(connect(mapStateToProps)(UserDashboard));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nclass AdminDashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleUser = this.handleUser.bind(this);\n    }\n    \n    handleUser() {\n        this.props.history.push('/user');\n    }\n\n    render() {\n        if (this.props.role === \"ROLE_ADMIN\") {\n            return (\n                <div>\n                    <h1> Welcome Administrator </h1>\n                    <button className=\"btn btn-light\" onClick={this.handleUser} >Go To User</button>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h1> You are NOT and admin </h1>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    jwt: state.authenticate.jwt,\n    role: state.authenticate.role\n});\n\nexport default withRouter(connect(mapStateToProps)(AdminDashboard));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { postAccount } from '../../Actions/Account';\nimport * as ActionTypes from '../../Actions/Types'\nimport './UserDetails.css';\n\n\nclass UserDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        values.preventDefault();\n\n        this.props.register(this.props.authenticate.jwt, {\n            firstName: values.target.firstName.value,\n            middleName: values.target.middleName.value,\n            lastName: values.target.lastName.value,\n            ssn: values.target.ssn.value,\n            email: values.target.email.value,\n            phone: values.target.phone.value\n        })\n            .then(result => {\n                if (result.type == ActionTypes.ACCOUNTHOLDER) {\n                    this.props.history.push('/user');\n                }\n            });\n    }\n\n    render() {\n        return (\n\n            <div className=\"d-flex register\">\n                <div className=\"col-md-5\">\n                    <div className=\"register-left\">\n                        <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\" />\n                        <h3>Welcome</h3>\n                        <p>Please fill out the form to take control of your finances today!</p>\n                    </div>\n                </div>\n\n                <div className=\"col-md-7\">\n                    <h3 className=\"register-heading\">Registration</h3>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"row register-form\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"First Name *\" id=\"firstName\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Middle Name *\" id=\"middleName\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Last Name *\" id=\"lastName\" />\n                                </div>\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <input type=\"\" className=\"form-control\" placeholder=\"Social Security Number *\" pattern=\"\\d{3}-?\\d{2}-?\\d{4}\" id=\"ssn\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" className=\"form-control\" placeholder=\"Your Email *\" id=\"email\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" minLength=\"10\" maxLength=\"10\" name=\"phone\" className=\"form-control\" placeholder=\"Your Phone *\" id=\"phone\" />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-primary btnRegister\" value=\"Register\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    authenticate: state.authenticate\n});\n\nconst mapDispatchToProps = dispatch => ({\n    register: (token, data) => dispatch(postAccount(token, data))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserDetails));","import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\n// import { connect } from 'react-redux';\nimport Header from './Header/Header';\nimport Home from \"./Home/Home\"\nimport UserDashboard from './UserDashboard/UserDashboard';\nimport AdminDashboard from './AdminDashboard/AdminDashboard';\n// import { login } from '../Actions/Authentication';\nimport UserDetails from './UserDetails/UserDetails';\n\nclass Main extends Component {\n\n    render() {\n        return (\n            <>\n                <Header />\n                <Switch location={this.props.location}>\n                    <Route path=\"/user\" component={UserDashboard} />\n                    <Route path=\"/register\" component={UserDetails} />\n                    <Route path=\"/admin\" component={AdminDashboard} />\n                    <Route exact path=\"/\" component={Home} />\n                </Switch>\n            </>\n        );\n    }\n}\n\n// const mapStateToProps = state => ({\n//     jwt: state.jwt,\n//     role: state.role,\n//     errMess: state.errMess\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//     Login: (username, password) => dispatch(login(username, password))\n// });\n\n// export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\nexport default Main;","import * as ActionTypes from '../Actions/Types';\n\nexport const Authentication = (state = { jwt: '', role: '', errMess: '' }, action) => {\n  switch (action.type) {\n    case ActionTypes.LOGIN:\n      return { ...state, jwt: action.payload.jwt, role: action.payload.role, errMess: '' };\n    case ActionTypes.LOGIN_FAILED:\n      return { ...state, errMess: action.payload };\n    default:\n      return state;\n  }\n}","import * as ActionTypes from '../Actions/Types';\n\nexport const AccountHolder = (state = { accountHolder: null, errMess: '' }, action) => {\n  switch (action.type) {\n    case ActionTypes.ACCOUNTHOLDER:\n      return { ...state, accountHolder: action.payload, errMess: '' };\n    case ActionTypes.ACCOUNTHOLDER_FAILED:\n      return { ...state, errMess: action.payload, accountHolder: null };\n    default:\n      return state;\n  }\n}","import * as ActionTypes from '../Actions/Types';\n\nexport const CdOfferings = (state = { offerings: null, errMess: '' }, action) => {\n  switch (action.type) {\n    case ActionTypes.CDOFFERINGS:\n      return { ...state, offerings: action.payload, errMess: '' };\n    case ActionTypes.CDOFFERINGS_FAILED:\n      return { ...state, errMess: action.payload, offerings: null };\n    default:\n      return state;\n  }\n}","import React, { Component } from 'react';\nimport Main from './Components/Main';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './Reducers/ConfigureStore'\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { Authentication } from './Authentication';\nimport { AccountHolder } from './AccountHolder';\nimport { CdOfferings } from './CDOfferings';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            authenticate: Authentication,\n            accountHolder: AccountHolder,\n            cdOfferings: CdOfferings\n        }),\n        applyMiddleware(thunk)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}